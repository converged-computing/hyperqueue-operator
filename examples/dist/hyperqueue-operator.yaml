apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: hyperqueue-operator
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: hyperqueue-operator
    control-plane: controller-manager
  name: hyperqueue-operator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: hyperqueues.flux-framework.org
spec:
  group: flux-framework.org
  names:
    kind: Hyperqueue
    listKind: HyperqueueList
    plural: hyperqueues
    singular: hyperqueue
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Hyperqueue is the Schema for the Hyperqueues API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: HyperqueueSpec defines the desired state of Hyperqueue
            properties:
              HyperqueueVersion:
                default: 0.15.0
                description: Release of Hyperqueue to installed (if hq binary not found in PATH)
                type: string
              commands:
                description: Global commands to run on all nodes
                properties:
                  init:
                    description: Init runs before anything in both scripts
                    type: string
                type: object
              deadlineSeconds:
                default: 31500000
                description: Time limit for the job Approximately one year. This cannot be zero or job won't start
                format: int64
                type: integer
              interactive:
                description: Interactive mode keeps the cluster running
                type: boolean
              job:
                description: If launching a job, control the spec here
                properties:
                  log:
                    description: Name for the log file
                    type: string
                  name:
                    description: Name for the job
                    type: string
                  nodes:
                    description: Nodes for the job (defaults to 0 for 1)
                    format: int64
                    type: integer
                type: object
              resources:
                additionalProperties:
                  anyOf:
                  - type: integer
                  - type: string
                  x-kubernetes-int-or-string: true
                description: Resources include limits and requests
                type: object
              server:
                description: Server is the main server to run Hyperqueue
                properties:
                  command:
                    description: Command will be honored by a server node
                    type: string
                  commands:
                    description: Commands to run around different parts of the hyperqueue setup
                    properties:
                      init:
                        description: Init runs before anything in both scripts
                        type: string
                    type: object
                  environment:
                    additionalProperties:
                      type: string
                    description: Key/value pairs for the environment
                    type: object
                  image:
                    default: ubuntu
                    description: Image to use for Hyperqueue
                    type: string
                  port:
                    description: Port for Hyperqueue to use. Since we have a headless service, this is not represented in the operator, just in starting the server or a worker
                    format: int32
                    type: integer
                  ports:
                    description: Ports to be exposed to other containers in the cluster We take a single list of integers and map to the same
                    items:
                      format: int32
                      type: integer
                    type: array
                    x-kubernetes-list-type: atomic
                  pullAlways:
                    description: PullAlways will always pull the container
                    type: boolean
                  pullSecret:
                    description: PullSecret for the node, if needed
                    type: string
                  resources:
                    description: Resources include limits and requests
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          x-kubernetes-int-or-string: true
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          x-kubernetes-int-or-string: true
                        type: object
                    type: object
                  workingDir:
                    description: Working directory
                    type: string
                type: object
              serviceName:
                description: Name for the cluster service
                type: string
              size:
                description: Size of the Hyperqueue (1 server + (N-1) nodes)
                format: int32
                type: integer
              worker:
                description: Worker is the worker node spec Defaults to be same spec as the server
                properties:
                  command:
                    description: Command will be honored by a server node
                    type: string
                  commands:
                    description: Commands to run around different parts of the hyperqueue setup
                    properties:
                      init:
                        description: Init runs before anything in both scripts
                        type: string
                    type: object
                  environment:
                    additionalProperties:
                      type: string
                    description: Key/value pairs for the environment
                    type: object
                  image:
                    default: ubuntu
                    description: Image to use for Hyperqueue
                    type: string
                  port:
                    description: Port for Hyperqueue to use. Since we have a headless service, this is not represented in the operator, just in starting the server or a worker
                    format: int32
                    type: integer
                  ports:
                    description: Ports to be exposed to other containers in the cluster We take a single list of integers and map to the same
                    items:
                      format: int32
                      type: integer
                    type: array
                    x-kubernetes-list-type: atomic
                  pullAlways:
                    description: PullAlways will always pull the container
                    type: boolean
                  pullSecret:
                    description: PullSecret for the node, if needed
                    type: string
                  resources:
                    description: Resources include limits and requests
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          x-kubernetes-int-or-string: true
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          x-kubernetes-int-or-string: true
                        type: object
                    type: object
                  workingDir:
                    description: Working directory
                    type: string
                type: object
            required:
            - server
            - size
            type: object
          status:
            description: HyperqueueStatus defines the observed state of Hyperqueue
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: hyperqueue-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: hyperqueue-operator
  name: hyperqueue-operator-controller-manager
  namespace: hyperqueue-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: hyperqueue-operator
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: hyperqueue-operator
  name: hyperqueue-operator-leader-election-role
  namespace: hyperqueue-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: hyperqueue-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - exec
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs/status
  verbs:
  - create
  - delete
  - exec
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - ""
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - batch
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - networks
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - flux-framework.org
  resources:
  - hyperqueues
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - flux-framework.org
  resources:
  - hyperqueues/finalizers
  verbs:
  - update
- apiGroups:
  - flux-framework.org
  resources:
  - hyperqueues/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - jobset.x-k8s.io
  resources:
  - jobsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - jobset.x-k8s.io
  resources:
  - jobsets/finalizers
  verbs:
  - update
- apiGroups:
  - jobset.x-k8s.io
  resources:
  - jobsets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: hyperqueue-operator
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: hyperqueue-operator
  name: hyperqueue-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: hyperqueue-operator
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: hyperqueue-operator
  name: hyperqueue-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: hyperqueue-operator
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: hyperqueue-operator
  name: hyperqueue-operator-leader-election-rolebinding
  namespace: hyperqueue-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: hyperqueue-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: hyperqueue-operator-controller-manager
  namespace: hyperqueue-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: hyperqueue-operator
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: hyperqueue-operator
  name: hyperqueue-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hyperqueue-operator-manager-role
subjects:
- kind: ServiceAccount
  name: hyperqueue-operator-controller-manager
  namespace: hyperqueue-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: hyperqueue-operator
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: hyperqueue-operator
  name: hyperqueue-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hyperqueue-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: hyperqueue-operator-controller-manager
  namespace: hyperqueue-operator-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: hyperqueue-operator
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: hyperqueue-operator
    control-plane: controller-manager
  name: hyperqueue-operator-controller-manager-metrics-service
  namespace: hyperqueue-operator-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: hyperqueue-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: hyperqueue-operator
    control-plane: controller-manager
  name: hyperqueue-operator-controller-manager
  namespace: hyperqueue-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: ghcr.io/converged-computing/hyperqueue-operator:latest
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: hyperqueue-operator-controller-manager
      terminationGracePeriodSeconds: 10
